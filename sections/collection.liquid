{% comment %}
  This section is used in the collection template to render collection page
  listing all products within a collection.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/collection
{% endcomment %}
<main>
  <h1>{{ collection.title }}</h1>

  <div class='coleccionContenedor' id='coleccion-{{ section.id }}' data-section-id='{{ section.id }}'>
    <aside class='contenedorFiltros'>
      {% comment %} Sort by selector con diseño custom {% endcomment %}
      {% if collection.sort_options.size > 0 %}
        <div class='filtroGrupo filtroOrden'>
          <button
            type='button'
            class='botonOrdenar botonOscuro'
            id='btn-ordenar-{{ section.id }}'
            aria-haspopup='true'
            aria-expanded='false'
          >
            Sort Products
          </button>
          <div class='menuOrdenar' id='menu-ordenar-{{ section.id }}'>
            {% for option in collection.sort_options %}
              <button
                type='button'
                class='opcionOrden'
                data-value='{{ option.value }}'
                {% if option.value == collection.sort_by %}
                  data-selected='true'
                {% endif %}
              >
                {{ option.name }}
              </button>
            {% endfor %}
          </div>
          <select
            name='sort_by'
            id='SortBy-{{ section.id }}'
            class='selectOrden visuallyHidden'
            aria-label='Ordenar productos'
          >
            {% for option in collection.sort_options %}
              <option
                value='{{ option.value }}'
                {% if option.value == collection.sort_by %}
                  selected
                {% endif %}
              >
                {{ option.name }}
              </option>
            {% endfor %}
          </select>
        </div>
      {% endif %}

      <form id='formFiltros' action='{{ collection.url }}' method='get'>
        {% for filter in collection.filters %}
          {% case filter.type %}
            {% when 'list' %}
              <details
                class='filtroGrupo'
                {% if filter.active_values.size > 0 %}
                  open
                {% endif %}
              >
                <summary>{{ filter.label }}</summary>
                <ul class='filtroLista'>
                  {% for value in filter.values %}
                    <li class='filtroValor'>
                      <input
                        type='checkbox'
                        name='{{ value.param_name }}'
                        value='{{ value.value }}'
                        id='Filtro-{{ filter.param_name }}-{{ forloop.index }}'
                        {% if value.active %}
                          checked
                        {% endif %}
                        {% if value.count == 0 and value.active == false %}
                          disabled
                        {% endif %}
                      >
                      <label for='Filtro-{{ filter.param_name }}-{{ forloop.index }}'>
                        {{ value.label }}
                        {% unless value.active %}({{ value.count }}){% endunless %}
                      </label>
                    </li>
                  {% endfor %}
                </ul>
              </details>
            {% when 'price_range' %}
              <details
                class='filtroGrupo'
                {% if filter.min_value.value or filter.max_value.value %}
                  open
                {% endif %}
              >
                <summary>{{ filter.label }}</summary>
                <div class='filtroPrecio'>
                  <div class='filtroPrecioCampo'>
                    <label for='Filtro-{{ filter.min_value.param_name }}'>Mín</label>
                    <input
                      name='{{ filter.min_value.param_name }}'
                      id='Filtro-{{ filter.min_value.param_name }}'
                      type='number'
                      inputmode='numeric'
                      min='0'
                      {% if filter.min_value.value %}
                        value='{{ filter.min_value.value | money_without_currency | replace: ",", "" }}'
                      {% endif %}
                    >
                  </div>
                  <div class='filtroPrecioCampo'>
                    <label for='Filtro-{{ filter.max_value.param_name }}'>Máx</label>
                    <input
                      name='{{ filter.max_value.param_name }}'
                      id='Filtro-{{ filter.max_value.param_name }}'
                      type='number'
                      inputmode='numeric'
                      min='0'
                      {% if filter.max_value.value %}
                        value='{{ filter.max_value.value | money_without_currency | replace: ",", "" }}'
                      {% endif %}
                    >
                  </div>
                </div>
              </details>
          {% endcase %}
        {% endfor %}

        <div class='filtrosAcciones'>
          <a href='{{ collection.url }}' class='botonSecundario'>Limpiar</a>
          <button type='submit' class='botonPrimario'>Aplicar</button>
        </div>
      </form>

      {% assign hay_activos = false %}
      {% for filter in collection.filters %}
        {% if filter.active_values and filter.active_values.size > 0 %}
          {% assign hay_activos = true %}
        {% endif %}
        {% if filter.type == 'price_range' %}
          {% if filter.min_value.value or filter.max_value.value %}
            {% assign hay_activos = true %}
          {% endif %}
        {% endif %}
      {% endfor %}

      {% if hay_activos %}
        <div class='filtrosActivos'>
          <p>Filtros activos:</p>
          <ul>
            {% for filter in collection.filters %}
              {% for value in filter.active_values %}
                <li>
                  <a href='{{ value.url_to_remove }}'>{{ value.label }} ✕</a>
                </li>
              {% endfor %}
              {% if filter.type == 'price_range' %}
                {% if filter.min_value.value or filter.max_value.value %}
                  <li>
                    <a href='{{ filter.url_to_remove }}'>
                      Precio:
                      {% if filter.min_value.value %}{{ filter.min_value.value | money }}{% else %}0{% endif %}
                      –
                      {% if filter.max_value.value -%}
                        {{- filter.max_value.value | money -}}
                      {%- else -%}
                        {{- filter.range_max | money -}}
                      {%- endif %}
                      ✕
                    </a>
                  </li>
                {% endif %}
              {% endif %}
            {% endfor %}
          </ul>
        </div>
      {% endif %}
    </aside>

    <div class='collection-products' id='productos-{{ section.id }}'>
      {% paginate collection.products by 20 %}
        {% for product in collection.products %}
          {% render 'tarjeta-producto', product: product, mostrar_precio: true %}
        {% endfor %}

        {{ paginate | default_pagination }}
        <div id='pagination-data' data-next='{{ paginate.next.url | default: '' }}' hidden></div>
      {% endpaginate %}
      <div id='sentinel-{{ section.id }}' aria-hidden='true'></div>
    </div>
  </div>
</main>

<style>
  .coleccionContenedor {
    display: grid;
    grid-template-columns: 280px 1fr;
    gap: 1.5rem;
    align-items: start;
  }

  .contenedorFiltros {
    position: sticky;
    top: 6rem;
  }

  .filtroGrupo {
    margin-bottom: 0.75rem;
  }
  .filtroGrupo > summary {
    cursor: pointer;
    font-weight: 600;
  }
  .filtroOrden {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    position: relative;
  }

  .visuallyHidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .botonOrdenar {
    cursor: pointer;
    width: 100%;
    text-align: left;
    display: flex;
    align-items: center;
    padding: 0.55rem 0.6rem;
  }

  .botonOrdenar::before {
    content: '';
    display: inline-block;
    width: 1rem;
    height: 1rem;
    margin-right: 0.5rem;
    background-image: url('{{ 'icono-ordenar.svg' | asset_url }}');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
  }

  .botonOrdenar:hover {
    opacity: 0.85;
  }

  .menuOrdenar {
    position: absolute;
    top: 100%;
    left: 0;
    margin-top: 0.25rem;
    background: white;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    min-width: 200px;
    z-index: 10;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4px);
    transition:
      opacity 0.2s ease,
      transform 0.2s ease,
      visibility 0.2s;
  }

  .menuOrdenar.abierto {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .opcionOrden {
    display: block;
    width: 100%;
    padding: 0.75rem 1rem;
    text-align: left;
    background: none;
    border: none;
    cursor: pointer;
    font-family: inherit;
    font-size: inherit;
    transition: background 0.15s ease;
  }

  .opcionOrden:hover,
  .opcionOrden:focus {
    background: #f5f5f5;
  }

  .opcionOrden[data-selected='true'] {
    background: #f0f0f0;
    font-weight: 600;
  }

  .opcionOrden:not(:last-child) {
    border-bottom: 1px solid #eee;
  }
  .filtroLista {
    list-style: none;
    padding: 0.5rem 0 0;
    margin: 0;
  }
  .filtroValor {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.25rem 0;
  }

  .filtroPrecio {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.5rem;
    padding-top: 0.5rem;
  }
  .filtroPrecioCampo label {
    display: block;
    font-size: 0.85rem;
    opacity: 0.8;
  }
  .filtroPrecioCampo input {
    width: 100%;
  }

  .filtrosAcciones {
    display: flex;
    gap: 0.75rem;
    margin-top: 0.75rem;
  }
  .filtrosActivos {
    margin-top: 1rem;
  }
  .filtrosActivos ul {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    list-style: none;
    padding: 0;
    margin: 0.25rem 0 0;
  }
  .filtrosActivos li a {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    border: 1px solid rgba(0, 0, 0, 0.12);
    border-radius: 999px;
    font-size: 0.85rem;
    text-decoration: none;
  }

  .collection-products {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    gap: 1rem;
  }

  /* Estilos para tarjeta de producto */
  .tarjetaProducto {
    text-decoration: none;
    color: inherit;
    display: block;
    transition: transform 0.2s ease;
  }
  .tarjetaProducto:hover {
    transform: translateY(-2px);
  }
  .tarjetaProducto img {
    width: 100%;
    display: block;
    background: #f5f5f5;
  }
  .tarjetaProductoTitulo {
    margin: 0.5rem 0 0;
    font-weight: 600;
    font-size: 1rem;
  }
  .tarjetaProductoPrecio {
    margin: 0.25rem 0 0;
    font-size: 0.95rem;
  }
  .tarjetaProductoPrecio .precioComparar {
    opacity: 0.6;
    text-decoration: line-through;
    margin-left: 0.5rem;
  }

  @media (max-width: 900px) {
    .coleccionContenedor {
      grid-template-columns: 1fr;
    }
    .contenedorFiltros {
      position: static;
      top: auto;
    }
  }
</style>

{% schema %}
{
  "name": "t:general.collection",
  "settings": []
}
{% endschema %}

<script src='{{ 'filtros-nativos.js' | asset_url }}' defer></script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    if (!window.FiltrosNativos) {
      console.error('FiltrosNativos no está disponible');
      return;
    }

    window.FiltrosNativos.init({
      rootId: 'coleccion-{{ section.id }}',
      collectionUrl: '{{ collection.url }}',
      sectionId: '{{ section.id }}',
      productosContainer: document.querySelector('#productos-{{ section.id }}'),
      productosSelector: '#productos-{{ section.id }}',
      sentinel: document.querySelector('#sentinel-{{ section.id }}'),
      fetchOnInit: false,
    });
  });
</script>
