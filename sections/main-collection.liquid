<div class='seccionColeccion' data-collection-handle='{{ collection.handle }}'>
  <div class='filtrosYOrden'>
    <div class='filtrosProductos'>
      <label for='orden-{{ section.id }}'>Ordenar:</label>
      <select id='orden-{{ section.id }}' class='selectOrden'>
        <option value='recientes' selected>Más recientes</option>
        <option value='precio-desc'>Precio: alto a bajo</option>
        <option value='precio-asc'>Precio: bajo a alto</option>
        <option value='titulo-asc'>Título: A → Z</option>
        <option value='titulo-desc'>Título: Z → A</option>
      </select>
    </div>

    {% comment %} Contenedor para filtros personalizados (se genera con JS) {% endcomment %}
    <div id='filtros-custom-{{ section.id }}' class='filtrosCustom'></div>
  </div>

  {% comment %} SSR inicial: primeros productos para SEO {% endcomment %}
  <div
    class='cuadriculaProductos'
    id='grid-{{ section.id }}'
    style='--cols: {{ section.settings.columnas_desktop | default: 3 }}; --cols-m: {{ section.settings.columnas_movil | default: 1 }}; --gap: {{ section.settings.espaciado | default: 16 }}px;'
  >
    {% assign inicial = collection.products | sort: 'published_at' | reverse %}
    {% for producto in inicial limit: section.settings.tamano_lote %}
      {% render 'tarjeta-producto', product: producto, mostrar_precio: section.settings.mostrar_precio %}
    {% endfor %}
  </div>

  <div id='sentinel-{{ section.id }}' aria-hidden='true'></div>
  <div class='loaderProductos' id='loader-{{ section.id }}' role='status' aria-live='polite'>
    <span class='loaderTexto'>Loading products...</span>
  </div>

  <script src='{{ 'filtros-productos.js' | asset_url }}' defer></script>
  <script>
    (function(){
      var sectionId = "{{ section.id }}";
      var collectionHandle = "{{ collection.handle }}";
      var tamLote = {{ section.settings.tamano_lote | default: 6 }};
      var mostrarPrecio = {{ section.settings.mostrar_precio | json }};

      var grid = document.getElementById('grid-' + sectionId);
      var loader = document.getElementById('loader-' + sectionId);
      var sentinel = document.getElementById('sentinel-' + sectionId);
      var selectOrden = document.getElementById('orden-' + sectionId);

      if (!grid || !window.FiltrosProductos) return;

      var indiceActual = 0;
      var cargandoInicial = true;
      var obs = null;

      function mostrarLoader(on) {
        if (loader) loader.style.display = on ? 'block' : 'none';
      }

      function renderizarLote(inicio, cantidad) {
        var filtrados = window.FiltrosProductos.productosFiltrados;
        var hasta = Math.min(inicio + cantidad, filtrados.length);

        for (var i = inicio; i < hasta; i++) {
          var producto = filtrados[i];
          var html = window.FiltrosProductos.renderCard(producto, mostrarPrecio);
          var wrapper = document.createElement('div');
          wrapper.innerHTML = html;
          grid.appendChild(wrapper.firstChild);
        }

        indiceActual = hasta;
        return hasta < filtrados.length; // hay más?
      }

      function reiniciarGrid() {
        grid.innerHTML = '';
        indiceActual = 0;
        var hayMas = renderizarLote(0, tamLote);
        return hayMas;
      }

      function cargarMas() {
        return renderizarLote(indiceActual, tamLote);
      }

      // Cargar todos los productos
      async function inicializar() {
        mostrarLoader(true);

        try {
          await window.FiltrosProductos.cargarTodos(collectionHandle);
          window.FiltrosProductos.ordenar('recientes');

          // Reemplazar SSR con versión ordenada
          var hayMas = reiniciarGrid();
          actualizarObservador(hayMas);

          // Generar filtros custom según colección
          generarFiltrosCustom();

          cargandoInicial = false;
        } catch (error) {
          console.error('Error inicializando filtros:', error);
        } finally {
          mostrarLoader(false);
        }
      }

      // Infinite scroll
      if (sentinel && 'IntersectionObserver' in window) {
        obs = new IntersectionObserver(function(entries) {
          entries.forEach(function(entry) {
            if (entry.isIntersecting && !cargandoInicial) {
              var hayMas = cargarMas();
              if (!hayMas) {
                obs.unobserve(sentinel);
              }
            }
          });
        }, { root: null, rootMargin: '300px 0px', threshold: 0 });
        obs.observe(sentinel);
      }

      // Asegura que el observador esté correcto tras reinicios
      function actualizarObservador(hayMas) {
        if (!obs || !sentinel) return;
        try { obs.unobserve(sentinel); } catch(e) {}
        if (hayMas) {
          obs.observe(sentinel);
        }
      }

      // Cambio de orden
      if (selectOrden) {
        selectOrden.addEventListener('change', function() {
          window.FiltrosProductos.ordenar(this.value);
          var hayMas = reiniciarGrid();
          actualizarObservador(hayMas);
        });
      }

      // Generar filtros personalizados según la colección
      function generarFiltrosCustom() {
        var container = document.getElementById('filtros-custom-' + sectionId);
        if (!container) return;

        var filtrosConfig = {
          'jewelry': ['material', 'size', 'stone'],
          'prints': ['paper_size', 'finish', 'orientation'],
          'diy-kits': ['difficulty', 'duration']
        };

        var filtros = filtrosConfig[collectionHandle] || [];
        if (filtros.length === 0) return;

        var html = '<div class="filtrosGrupo">';

        filtros.forEach(function(filtro) {
          var valores = window.FiltrosProductos.obtenerValoresTag(filtro);
          if (valores.length === 0) return;

          html += '<div class="filtro">';
          html += '<label>' + filtro.replace('_', ' ') + ':</label>';
          html += '<select class="filtro-select" data-filtro="' + filtro + '">';
          html += '<option value="">Todos</option>';
          valores.forEach(function(val) {
            html += '<option value="' + val + '">' + val + '</option>';
          });
          html += '</select>';
          html += '</div>';
        });

        html += '</div>';
        container.innerHTML = html;

        // Event listeners para filtros custom
        container.querySelectorAll('.filtro-select').forEach(function(select) {
          select.addEventListener('change', function() {
            aplicarFiltrosCustom();
          });
        });
      }

      function aplicarFiltrosCustom() {
        var container = document.getElementById('filtros-custom-' + sectionId);
        if (!container) return;

        var filtrosCustom = {};
        container.querySelectorAll('.filtro-select').forEach(function(select) {
          var key = select.getAttribute('data-filtro');
          var val = select.value;
          if (val) {
            filtrosCustom[key] = val;
          }
        });

        window.FiltrosProductos.aplicarFiltros({
          custom: filtrosCustom
        });

        var hayMas = reiniciarGrid();
        actualizarObservador(hayMas);
      }

      // Iniciar
      setTimeout(inicializar, 100);

    })();
  </script>
</div>

{% schema %}
{
  "name": "Colección Principal",
  "settings": [
    {
      "type": "range",
      "id": "tamano_lote",
      "label": "Productos por lote",
      "min": 6,
      "max": 48,
      "step": 6,
      "default": 12
    },
    {
      "type": "range",
      "id": "columnas_desktop",
      "label": "Columnas en escritorio",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "columnas_movil",
      "label": "Columnas en móvil",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 1
    },
    {
      "type": "range",
      "id": "espaciado",
      "label": "Espaciado entre productos (px)",
      "min": 0,
      "max": 40,
      "step": 4,
      "default": 16
    },
    {
      "type": "checkbox",
      "id": "mostrar_precio",
      "label": "Mostrar precio",
      "default": true
    }
  ]
}
{% endschema %}

{% stylesheet %}
  .seccionColeccion {
    width: 100%;
  }

  .filtrosYOrden {
    margin: 0 0 1.5rem;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: flex-start;
  }

  .filtrosProductos {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .filtrosCustom {
    flex: 1;
  }

  .filtrosGrupo {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .filtro {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .filtro label {
    text-transform: capitalize;
    font-weight: 500;
  }

  .filtro-select,
  .selectOrden {
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    background: white;
    font-size: 0.95rem;
  }

  .loaderProductos {
    display: none;
    margin: 2rem auto;
    padding: 1rem;
    text-align: center;
  }

  .loaderTexto {
    opacity: 0.7;
  }

  .cuadriculaProductos {
    display: grid;
    grid-template-columns: repeat(var(--cols, 3), minmax(0, 1fr));
    gap: var(--gap, 16px);
  }

  @media (max-width: 768px) {
    .cuadriculaProductos {
      grid-template-columns: repeat(var(--cols-m, 1), minmax(0, 1fr));
    }

    .filtrosYOrden {
      flex-direction: column;
    }
  }
{% endstylesheet %}
